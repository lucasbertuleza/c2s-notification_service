services:
  app:
    build:
      context: ./
      dockerfile: ./docker/Dockerfile.dev
      args:
        - APPNAME=${COMPOSE_PROJECT_NAME}
    image: lucasbertuleza/${COMPOSE_PROJECT_NAME}_app
    container_name: ${COMPOSE_PROJECT_NAME}_app
    entrypoint: dockerize -wait tcp://database:3306 -wait tcp://rabbitmq:5672 -timeout 30s docker-entrypoint.sh
    command: ash -c "rm -f tmp/pids/server.pid && bin/rails server --port 3000 --binding 0.0.0.0"
    working_dir: /home/rails/${COMPOSE_PROJECT_NAME}
    volumes:
      - .:/home/rails/${COMPOSE_PROJECT_NAME}
      - bundle_cache:/usr/local/bundle
    env_file: .env
    depends_on:
      - database
    stdin_open: true
    tty: true
    networks:
      - net

  database:
    image: mysql:9.1.0
    container_name: ${COMPOSE_PROJECT_NAME}_database
    command: --max_allowed_packet=128M
    tty: true
    restart: on-failure
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${DATABASE_PASSWORD}
    mem_limit: 512m
    networks:
      - net

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:4.0.3-management-alpine
    container_name: ${COMPOSE_PROJECT_NAME}_rabbitmq
    command: ash -c "echo 'vm_memory_high_watermark.absolute = 2Gi' >> /etc/rabbitmq/conf.d/10-defaults.conf; rabbitmq-server"
    env_file: .env
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    mem_limit: 2gb
    ports:
      - 8080:15672
    networks:
      - net

volumes:
  bundle_cache:
  mysql_data:
  rabbitmq_data:

networks:
  net:
